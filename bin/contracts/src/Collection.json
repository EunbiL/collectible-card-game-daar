{
    "contractName": "Collection",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_name",
                    "type": "string"
                },
                {
                    "internalType": "uint256",
                    "name": "_cardCount",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "approved",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_fromTokenId",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_toTokenId",
                    "type": "uint256"
                }
            ],
            "name": "BatchMetadataUpdate",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_tokenId",
                    "type": "uint256"
                }
            ],
            "name": "MetadataUpdate",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cardCount",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "collectionName",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "getApproved",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "cardNumber",
                    "type": "uint256"
                },
                {
                    "internalType": "string",
                    "name": "imgUri",
                    "type": "string"
                }
            ],
            "name": "mintCard",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ownerOf",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "tokenURI",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_cardCount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cardCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectionName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cardNumber\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"imgUri\",\"type\":\"string\"}],\"name\":\"mintCard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/nesri/Videos/collectible-card-game-daar/contracts/src/Collection.sol\":\"Collection\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/nesri/Videos/collectible-card-game-daar/contracts/src/Collection.sol\":{\"keccak256\":\"0x2e4e97b37873553eb1e69dee194b85e794c3fcdc3ad6f2b617e30f417179e316\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2da10d37490fd731016436b05a67a5f1a99b73f36ddc92ab62930058dd90b02\",\"dweb:/ipfs/QmRsUMEciMXzu5NeTW8dLeR2pM11BLXvf3eVUumRDZVJvr\"]},\"c:/Users/nesri/Videos/collectible-card-game-daar/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"c:/Users/nesri/Videos/collectible-card-game-daar/node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"c:/Users/nesri/Videos/collectible-card-game-daar/node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"c:/Users/nesri/Videos/collectible-card-game-daar/node_modules/@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"c:/Users/nesri/Videos/collectible-card-game-daar/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"c:/Users/nesri/Videos/collectible-card-game-daar/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"c:/Users/nesri/Videos/collectible-card-game-daar/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"c:/Users/nesri/Videos/collectible-card-game-daar/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"c:/Users/nesri/Videos/collectible-card-game-daar/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"c:/Users/nesri/Videos/collectible-card-game-daar/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"c:/Users/nesri/Videos/collectible-card-game-daar/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"c:/Users/nesri/Videos/collectible-card-game-daar/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"c:/Users/nesri/Videos/collectible-card-game-daar/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"c:/Users/nesri/Videos/collectible-card-game-daar/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"c:/Users/nesri/Videos/collectible-card-game-daar/node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"c:/Users/nesri/Videos/collectible-card-game-daar/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
    "bytecode": "60806040523480156200001157600080fd5b5060405162001ddb38038062001ddb833981016040819052620000349162000110565b60408051808201909152600481526310d3d31360e21b6020820152829060006200005f83826200027a565b5060016200006e82826200027a565b5050506200008b62000085620000a460201b60201c565b620000a8565b60086200009983826200027a565b506009555062000346565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200012457600080fd5b82516001600160401b03808211156200013c57600080fd5b818501915085601f8301126200015157600080fd5b815181811115620001665762000166620000fa565b604051601f8201601f19908116603f01168101908382118183101715620001915762000191620000fa565b81604052828152602093508884848701011115620001ae57600080fd5b600091505b82821015620001d25784820184015181830185015290830190620001b3565b6000928101840192909252509401519395939450505050565b600181811c908216806200020057607f821691505b6020821081036200022157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200027557600081815260208120601f850160051c81016020861015620002505750805b601f850160051c820191505b8181101562000271578281556001016200025c565b5050505b505050565b81516001600160401b03811115620002965762000296620000fa565b620002ae81620002a78454620001eb565b8462000227565b602080601f831160018114620002e65760008415620002cd5750858301515b600019600386901b1c1916600185901b17855562000271565b600085815260208120601f198616915b828110156200031757888601518255948401946001909101908401620002f6565b5085821015620003365787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611a8580620003566000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063b88d4fde11610071578063b88d4fde1461024d578063c87b56dd14610260578063e5326ab114610273578063e985e9c51461027b578063f2fde38b1461028e57600080fd5b806370a0823114610206578063715018a6146102195780638da5cb5b1461022157806395d89b4114610232578063a22cb4651461023a57600080fd5b80631b6cde10116100f45780631b6cde10146101a357806323b872dd146101ba578063330fe3df146101cd57806342842e0e146101e05780636352211e146101f357600080fd5b806301ffc9a71461012657806306fdde031461014e578063081812fc14610163578063095ea7b31461018e575b600080fd5b6101396101343660046113b4565b6102a1565b60405190151581526020015b60405180910390f35b6101566102cc565b6040516101459190611421565b610176610171366004611434565b61035e565b6040516001600160a01b039091168152602001610145565b6101a161019c366004611469565b610385565b005b6101ac60095481565b604051908152602001610145565b6101a16101c8366004611493565b61049f565b6101a16101db36600461155b565b6104d0565b6101a16101ee366004611493565b61052b565b610176610201366004611434565b610546565b6101ac6102143660046115d0565b6105a6565b6101a161062c565b6007546001600160a01b0316610176565b610156610640565b6101a16102483660046115eb565b61064f565b6101a161025b366004611627565b61065e565b61015661026e366004611434565b610696565b6101566107a6565b610139610289366004611677565b610834565b6101a161029c3660046115d0565b610862565b60006001600160e01b03198216632483248360e11b14806102c657506102c6826108db565b92915050565b6060600080546102db906116aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610307906116aa565b80156103545780601f1061032957610100808354040283529160200191610354565b820191906000526020600020905b81548152906001019060200180831161033757829003601f168201915b5050505050905090565b60006103698261092b565b506000908152600460205260409020546001600160a01b031690565b600061039082610546565b9050806001600160a01b0316836001600160a01b0316036104025760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061041e575061041e8133610834565b6104905760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103f9565b61049a838361098a565b505050565b6104a933826109f8565b6104c55760405162461bcd60e51b81526004016103f9906116e4565b61049a838383610a56565b6104d8610bba565b6104e28484610c14565b6104ec8382610d9f565b6000816104f884610e6a565b604051602001610509929190611731565b60405160208183030381529060405290506105248482610d9f565b5050505050565b61049a8383836040518060200160405280600081525061065e565b6000818152600260205260408120546001600160a01b0316806102c65760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103f9565b60006001600160a01b0382166106105760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103f9565b506001600160a01b031660009081526003602052604090205490565b610634610bba565b61063e6000610f6b565b565b6060600180546102db906116aa565b61065a338383610fbd565b5050565b61066833836109f8565b6106845760405162461bcd60e51b81526004016103f9906116e4565b6106908484848461108b565b50505050565b60606106a18261092b565b600082815260066020526040812080546106ba906116aa565b80601f01602080910402602001604051908101604052809291908181526020018280546106e6906116aa565b80156107335780601f1061070857610100808354040283529160200191610733565b820191906000526020600020905b81548152906001019060200180831161071657829003601f168201915b50505050509050600061075160408051602081019091526000815290565b90508051600003610763575092915050565b81511561079557808260405160200161077d929190611778565b60405160208183030381529060405292505050919050565b61079e846110be565b949350505050565b600880546107b3906116aa565b80601f01602080910402602001604051908101604052809291908181526020018280546107df906116aa565b801561082c5780601f106108015761010080835404028352916020019161082c565b820191906000526020600020905b81548152906001019060200180831161080f57829003601f168201915b505050505081565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61086a610bba565b6001600160a01b0381166108cf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103f9565b6108d881610f6b565b50565b60006001600160e01b031982166380ac58cd60e01b148061090c57506001600160e01b03198216635b5e139f60e01b145b806102c657506301ffc9a760e01b6001600160e01b03198316146102c6565b6000818152600260205260409020546001600160a01b03166108d85760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103f9565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109bf82610546565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610a0483610546565b9050806001600160a01b0316846001600160a01b03161480610a2b5750610a2b8185610834565b8061079e5750836001600160a01b0316610a448461035e565b6001600160a01b031614949350505050565b826001600160a01b0316610a6982610546565b6001600160a01b031614610a8f5760405162461bcd60e51b81526004016103f9906117a7565b6001600160a01b038216610af15760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103f9565b826001600160a01b0316610b0482610546565b6001600160a01b031614610b2a5760405162461bcd60e51b81526004016103f9906117a7565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6007546001600160a01b0316331461063e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103f9565b6001600160a01b038216610c6a5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103f9565b6000818152600260205260409020546001600160a01b031615610ccf5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103f9565b6000818152600260205260409020546001600160a01b031615610d345760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103f9565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b0316610e1a5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016103f9565b6000828152600660205260409020610e32828261183a565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b606081600003610e915750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610ebb5780610ea581611910565b9150610eb49050600a8361193f565b9150610e95565b60008167ffffffffffffffff811115610ed657610ed66114cf565b6040519080825280601f01601f191660200182016040528015610f00576020820181803683370190505b5090505b841561079e57610f15600183611953565b9150610f22600a86611966565b610f2d90603061197a565b60f81b818381518110610f4257610f4261198d565b60200101906001600160f81b031916908160001a905350610f64600a8661193f565b9450610f04565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03160361101e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103f9565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611096848484610a56565b6110a284848484611132565b6106905760405162461bcd60e51b81526004016103f9906119a3565b60606110c98261092b565b60006110e060408051602081019091526000815290565b90506000815111611100576040518060200160405280600081525061112b565b8061110a84611233565b60405160200161111b929190611778565b6040516020818303038152906040525b9392505050565b60006001600160a01b0384163b1561122857604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906111769033908990889088906004016119f5565b6020604051808303816000875af19250505080156111b1575060408051601f3d908101601f191682019092526111ae91810190611a32565b60015b61120e573d8080156111df576040519150601f19603f3d011682016040523d82523d6000602084013e6111e4565b606091505b5080516000036112065760405162461bcd60e51b81526004016103f9906119a3565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061079e565b506001949350505050565b60606000611240836112c6565b600101905060008167ffffffffffffffff811115611260576112606114cf565b6040519080825280601f01601f19166020018201604052801561128a576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461129457509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106113055772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611331576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061134f57662386f26fc10000830492506010015b6305f5e1008310611367576305f5e100830492506008015b612710831061137b57612710830492506004015b6064831061138d576064830492506002015b600a83106102c65760010192915050565b6001600160e01b0319811681146108d857600080fd5b6000602082840312156113c657600080fd5b813561112b8161139e565b60005b838110156113ec5781810151838201526020016113d4565b50506000910152565b6000815180845261140d8160208601602086016113d1565b601f01601f19169290920160200192915050565b60208152600061112b60208301846113f5565b60006020828403121561144657600080fd5b5035919050565b80356001600160a01b038116811461146457600080fd5b919050565b6000806040838503121561147c57600080fd5b6114858361144d565b946020939093013593505050565b6000806000606084860312156114a857600080fd5b6114b18461144d565b92506114bf6020850161144d565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611500576115006114cf565b604051601f8501601f19908116603f01168101908282118183101715611528576115286114cf565b8160405280935085815286868601111561154157600080fd5b858560208301376000602087830101525050509392505050565b6000806000806080858703121561157157600080fd5b61157a8561144d565b93506020850135925060408501359150606085013567ffffffffffffffff8111156115a457600080fd5b8501601f810187136115b557600080fd5b6115c4878235602084016114e5565b91505092959194509250565b6000602082840312156115e257600080fd5b61112b8261144d565b600080604083850312156115fe57600080fd5b6116078361144d565b91506020830135801515811461161c57600080fd5b809150509250929050565b6000806000806080858703121561163d57600080fd5b6116468561144d565b93506116546020860161144d565b925060408501359150606085013567ffffffffffffffff8111156115a457600080fd5b6000806040838503121561168a57600080fd5b6116938361144d565b91506116a16020840161144d565b90509250929050565b600181811c908216806116be57607f821691505b6020821081036116de57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600083516117438184602088016113d1565b6b3f636172644e756d6265723d60a01b908301908152835161176c81600c8401602088016113d1565b01600c01949350505050565b6000835161178a8184602088016113d1565b83519083019061179e8183602088016113d1565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b601f82111561049a57600081815260208120601f850160051c810160208610156118135750805b601f850160051c820191505b818110156118325782815560010161181f565b505050505050565b815167ffffffffffffffff811115611854576118546114cf565b6118688161186284546116aa565b846117ec565b602080601f83116001811461189d57600084156118855750858301515b600019600386901b1c1916600185901b178555611832565b600085815260208120601f198616915b828110156118cc578886015182559484019460019091019084016118ad565b50858210156118ea5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600060018201611922576119226118fa565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261194e5761194e611929565b500490565b818103818111156102c6576102c66118fa565b60008261197557611975611929565b500690565b808201808211156102c6576102c66118fa565b634e487b7160e01b600052603260045260246000fd5b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611a28908301846113f5565b9695505050505050565b600060208284031215611a4457600080fd5b815161112b8161139e56fea264697066735822122017cc73b59c30a4e279c22bfe1880ec53c6e7d508d3993711530503cb8f1e373364736f6c63430008130033",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063b88d4fde11610071578063b88d4fde1461024d578063c87b56dd14610260578063e5326ab114610273578063e985e9c51461027b578063f2fde38b1461028e57600080fd5b806370a0823114610206578063715018a6146102195780638da5cb5b1461022157806395d89b4114610232578063a22cb4651461023a57600080fd5b80631b6cde10116100f45780631b6cde10146101a357806323b872dd146101ba578063330fe3df146101cd57806342842e0e146101e05780636352211e146101f357600080fd5b806301ffc9a71461012657806306fdde031461014e578063081812fc14610163578063095ea7b31461018e575b600080fd5b6101396101343660046113b4565b6102a1565b60405190151581526020015b60405180910390f35b6101566102cc565b6040516101459190611421565b610176610171366004611434565b61035e565b6040516001600160a01b039091168152602001610145565b6101a161019c366004611469565b610385565b005b6101ac60095481565b604051908152602001610145565b6101a16101c8366004611493565b61049f565b6101a16101db36600461155b565b6104d0565b6101a16101ee366004611493565b61052b565b610176610201366004611434565b610546565b6101ac6102143660046115d0565b6105a6565b6101a161062c565b6007546001600160a01b0316610176565b610156610640565b6101a16102483660046115eb565b61064f565b6101a161025b366004611627565b61065e565b61015661026e366004611434565b610696565b6101566107a6565b610139610289366004611677565b610834565b6101a161029c3660046115d0565b610862565b60006001600160e01b03198216632483248360e11b14806102c657506102c6826108db565b92915050565b6060600080546102db906116aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610307906116aa565b80156103545780601f1061032957610100808354040283529160200191610354565b820191906000526020600020905b81548152906001019060200180831161033757829003601f168201915b5050505050905090565b60006103698261092b565b506000908152600460205260409020546001600160a01b031690565b600061039082610546565b9050806001600160a01b0316836001600160a01b0316036104025760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061041e575061041e8133610834565b6104905760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103f9565b61049a838361098a565b505050565b6104a933826109f8565b6104c55760405162461bcd60e51b81526004016103f9906116e4565b61049a838383610a56565b6104d8610bba565b6104e28484610c14565b6104ec8382610d9f565b6000816104f884610e6a565b604051602001610509929190611731565b60405160208183030381529060405290506105248482610d9f565b5050505050565b61049a8383836040518060200160405280600081525061065e565b6000818152600260205260408120546001600160a01b0316806102c65760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103f9565b60006001600160a01b0382166106105760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103f9565b506001600160a01b031660009081526003602052604090205490565b610634610bba565b61063e6000610f6b565b565b6060600180546102db906116aa565b61065a338383610fbd565b5050565b61066833836109f8565b6106845760405162461bcd60e51b81526004016103f9906116e4565b6106908484848461108b565b50505050565b60606106a18261092b565b600082815260066020526040812080546106ba906116aa565b80601f01602080910402602001604051908101604052809291908181526020018280546106e6906116aa565b80156107335780601f1061070857610100808354040283529160200191610733565b820191906000526020600020905b81548152906001019060200180831161071657829003601f168201915b50505050509050600061075160408051602081019091526000815290565b90508051600003610763575092915050565b81511561079557808260405160200161077d929190611778565b60405160208183030381529060405292505050919050565b61079e846110be565b949350505050565b600880546107b3906116aa565b80601f01602080910402602001604051908101604052809291908181526020018280546107df906116aa565b801561082c5780601f106108015761010080835404028352916020019161082c565b820191906000526020600020905b81548152906001019060200180831161080f57829003601f168201915b505050505081565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61086a610bba565b6001600160a01b0381166108cf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103f9565b6108d881610f6b565b50565b60006001600160e01b031982166380ac58cd60e01b148061090c57506001600160e01b03198216635b5e139f60e01b145b806102c657506301ffc9a760e01b6001600160e01b03198316146102c6565b6000818152600260205260409020546001600160a01b03166108d85760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103f9565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109bf82610546565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610a0483610546565b9050806001600160a01b0316846001600160a01b03161480610a2b5750610a2b8185610834565b8061079e5750836001600160a01b0316610a448461035e565b6001600160a01b031614949350505050565b826001600160a01b0316610a6982610546565b6001600160a01b031614610a8f5760405162461bcd60e51b81526004016103f9906117a7565b6001600160a01b038216610af15760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103f9565b826001600160a01b0316610b0482610546565b6001600160a01b031614610b2a5760405162461bcd60e51b81526004016103f9906117a7565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6007546001600160a01b0316331461063e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103f9565b6001600160a01b038216610c6a5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103f9565b6000818152600260205260409020546001600160a01b031615610ccf5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103f9565b6000818152600260205260409020546001600160a01b031615610d345760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103f9565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b0316610e1a5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016103f9565b6000828152600660205260409020610e32828261183a565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b606081600003610e915750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610ebb5780610ea581611910565b9150610eb49050600a8361193f565b9150610e95565b60008167ffffffffffffffff811115610ed657610ed66114cf565b6040519080825280601f01601f191660200182016040528015610f00576020820181803683370190505b5090505b841561079e57610f15600183611953565b9150610f22600a86611966565b610f2d90603061197a565b60f81b818381518110610f4257610f4261198d565b60200101906001600160f81b031916908160001a905350610f64600a8661193f565b9450610f04565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03160361101e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103f9565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611096848484610a56565b6110a284848484611132565b6106905760405162461bcd60e51b81526004016103f9906119a3565b60606110c98261092b565b60006110e060408051602081019091526000815290565b90506000815111611100576040518060200160405280600081525061112b565b8061110a84611233565b60405160200161111b929190611778565b6040516020818303038152906040525b9392505050565b60006001600160a01b0384163b1561122857604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906111769033908990889088906004016119f5565b6020604051808303816000875af19250505080156111b1575060408051601f3d908101601f191682019092526111ae91810190611a32565b60015b61120e573d8080156111df576040519150601f19603f3d011682016040523d82523d6000602084013e6111e4565b606091505b5080516000036112065760405162461bcd60e51b81526004016103f9906119a3565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061079e565b506001949350505050565b60606000611240836112c6565b600101905060008167ffffffffffffffff811115611260576112606114cf565b6040519080825280601f01601f19166020018201604052801561128a576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461129457509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106113055772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611331576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061134f57662386f26fc10000830492506010015b6305f5e1008310611367576305f5e100830492506008015b612710831061137b57612710830492506004015b6064831061138d576064830492506002015b600a83106102c65760010192915050565b6001600160e01b0319811681146108d857600080fd5b6000602082840312156113c657600080fd5b813561112b8161139e565b60005b838110156113ec5781810151838201526020016113d4565b50506000910152565b6000815180845261140d8160208601602086016113d1565b601f01601f19169290920160200192915050565b60208152600061112b60208301846113f5565b60006020828403121561144657600080fd5b5035919050565b80356001600160a01b038116811461146457600080fd5b919050565b6000806040838503121561147c57600080fd5b6114858361144d565b946020939093013593505050565b6000806000606084860312156114a857600080fd5b6114b18461144d565b92506114bf6020850161144d565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611500576115006114cf565b604051601f8501601f19908116603f01168101908282118183101715611528576115286114cf565b8160405280935085815286868601111561154157600080fd5b858560208301376000602087830101525050509392505050565b6000806000806080858703121561157157600080fd5b61157a8561144d565b93506020850135925060408501359150606085013567ffffffffffffffff8111156115a457600080fd5b8501601f810187136115b557600080fd5b6115c4878235602084016114e5565b91505092959194509250565b6000602082840312156115e257600080fd5b61112b8261144d565b600080604083850312156115fe57600080fd5b6116078361144d565b91506020830135801515811461161c57600080fd5b809150509250929050565b6000806000806080858703121561163d57600080fd5b6116468561144d565b93506116546020860161144d565b925060408501359150606085013567ffffffffffffffff8111156115a457600080fd5b6000806040838503121561168a57600080fd5b6116938361144d565b91506116a16020840161144d565b90509250929050565b600181811c908216806116be57607f821691505b6020821081036116de57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600083516117438184602088016113d1565b6b3f636172644e756d6265723d60a01b908301908152835161176c81600c8401602088016113d1565b01600c01949350505050565b6000835161178a8184602088016113d1565b83519083019061179e8183602088016113d1565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b601f82111561049a57600081815260208120601f850160051c810160208610156118135750805b601f850160051c820191505b818110156118325782815560010161181f565b505050505050565b815167ffffffffffffffff811115611854576118546114cf565b6118688161186284546116aa565b846117ec565b602080601f83116001811461189d57600084156118855750858301515b600019600386901b1c1916600185901b178555611832565b600085815260208120601f198616915b828110156118cc578886015182559484019460019091019084016118ad565b50858210156118ea5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600060018201611922576119226118fa565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261194e5761194e611929565b500490565b818103818111156102c6576102c66118fa565b60008261197557611975611929565b500690565b808201808211156102c6576102c66118fa565b634e487b7160e01b600052603260045260246000fd5b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611a28908301846113f5565b9695505050505050565b600060208284031215611a4457600080fd5b815161112b8161139e56fea264697066735822122017cc73b59c30a4e279c22bfe1880ec53c6e7d508d3993711530503cb8f1e373364736f6c63430008130033",
    "sourceMap": "350:1176:0:-:0;;;474:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:6;;;;;;;;;;;;-1:-1:-1;;;1390:113:6;;;;534:5:0;;-1:-1:-1;1456:13:6;534:5:0;-1:-1:-1;1456:13:6;:::i;:::-;-1:-1:-1;1479:7:6;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;936:32:2;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;560:14:0::1;:22;577:5:::0;560:14;:22:::1;:::i;:::-;-1:-1:-1::0;593:9:0::1;:22:::0;-1:-1:-1;350:1176:0;;640:96:12;719:10;;640:96::o;2426:187:2:-;2518:6;;;-1:-1:-1;;;;;2534:17:2;;;-1:-1:-1;;;;;;2534:17:2;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;14:127:18:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1105;235:6;243;296:2;284:9;275:7;271:23;267:32;264:52;;;312:1;309;302:12;264:52;339:16;;-1:-1:-1;;;;;404:14:18;;;401:34;;;431:1;428;421:12;401:34;469:6;458:9;454:22;444:32;;514:7;507:4;503:2;499:13;495:27;485:55;;536:1;533;526:12;485:55;565:2;559:9;587:2;583;580:10;577:36;;;593:18;;:::i;:::-;668:2;662:9;636:2;722:13;;-1:-1:-1;;718:22:18;;;742:2;714:31;710:40;698:53;;;766:18;;;786:22;;;763:46;760:72;;;812:18;;:::i;:::-;852:10;848:2;841:22;887:2;879:6;872:18;909:4;899:14;;950:7;945:2;940;936;932:11;928:20;925:33;922:53;;;971:1;968;961:12;922:53;993:1;984:10;;1003:129;1017:2;1014:1;1011:9;1003:129;;;1105:10;;;1101:19;;1095:26;1074:14;;;1070:23;;1063:59;1028:10;;;;1003:129;;;1174:1;1152:15;;;1148:24;;1141:35;;;;-1:-1:-1;1226:18:18;;1220:25;1156:6;;1220:25;;-1:-1:-1;;;;146:1105:18:o;1256:380::-;1335:1;1331:12;;;;1378;;;1399:61;;1453:4;1445:6;1441:17;1431:27;;1399:61;1506:2;1498:6;1495:14;1475:18;1472:38;1469:161;;1552:10;1547:3;1543:20;1540:1;1533:31;1587:4;1584:1;1577:15;1615:4;1612:1;1605:15;1469:161;;1256:380;;;:::o;1767:545::-;1869:2;1864:3;1861:11;1858:448;;;1905:1;1930:5;1926:2;1919:17;1975:4;1971:2;1961:19;2045:2;2033:10;2029:19;2026:1;2022:27;2016:4;2012:38;2081:4;2069:10;2066:20;2063:47;;;-1:-1:-1;2104:4:18;2063:47;2159:2;2154:3;2150:12;2147:1;2143:20;2137:4;2133:31;2123:41;;2214:82;2232:2;2225:5;2222:13;2214:82;;;2277:17;;;2258:1;2247:13;2214:82;;;2218:3;;;1858:448;1767:545;;;:::o;2488:1352::-;2608:10;;-1:-1:-1;;;;;2630:30:18;;2627:56;;;2663:18;;:::i;:::-;2692:97;2782:6;2742:38;2774:4;2768:11;2742:38;:::i;:::-;2736:4;2692:97;:::i;:::-;2844:4;;2908:2;2897:14;;2925:1;2920:663;;;;3627:1;3644:6;3641:89;;;-1:-1:-1;3696:19:18;;;3690:26;3641:89;-1:-1:-1;;2445:1:18;2441:11;;;2437:24;2433:29;2423:40;2469:1;2465:11;;;2420:57;3743:81;;2890:944;;2920:663;1714:1;1707:14;;;1751:4;1738:18;;-1:-1:-1;;2956:20:18;;;3074:236;3088:7;3085:1;3082:14;3074:236;;;3177:19;;;3171:26;3156:42;;3269:27;;;;3237:1;3225:14;;;;3104:19;;3074:236;;;3078:3;3338:6;3329:7;3326:19;3323:201;;;3399:19;;;3393:26;-1:-1:-1;;3482:1:18;3478:14;;;3494:3;3474:24;3470:37;3466:42;3451:58;3436:74;;3323:201;-1:-1:-1;;;;;3570:1:18;3554:14;;;3550:22;3537:36;;-1:-1:-1;2488:1352:18:o;:::-;350:1176:0;;;;;;",
    "deployedSourceMap": "350:1176:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;535:205:9;;;;;;:::i;:::-;;:::i;:::-;;;565:14:18;;558:22;540:41;;528:2;513:18;535:205:9;;;;;;;;2471:98:6;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:18;;;1679:51;;1667:2;1652:18;3935:167:6;1533:203:18;3468:406:6;;;;;;:::i;:::-;;:::i;:::-;;441:24:0;;;;;;;;;2324:25:18;;;2312:2;2297:18;441:24:0;2178:177:18;4612:296:6;;;;;;:::i;:::-;;:::i;1186:337:0:-;;;;;;:::i;:::-;;:::i;4974:149:6:-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;1824:101:2:-;;;:::i;1201:85::-;1273:6;;-1:-1:-1;;;;;1273:6:2;1201:85;;2633:102:6;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5189:276::-;;;;;;:::i;:::-;;:::i;806:608:9:-;;;;;;:::i;:::-;;:::i;406:28:0:-;;;:::i;4388:162:6:-;;;;;;:::i;:::-;;:::i;2074:198:2:-;;;;;;:::i;:::-;;:::i;535:205:9:-;637:4;-1:-1:-1;;;;;;660:33:9;;-1:-1:-1;;;660:33:9;;:73;;;697:36;721:11;697:23;:36::i;:::-;653:80;535:205;-1:-1:-1;;535:205:9:o;2471:98:6:-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:6;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:6;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:6;:2;-1:-1:-1;;;;;3605:11:6;;3597:57;;;;-1:-1:-1;;;3597:57:6;;6196:2:18;3597:57:6;;;6178:21:18;6235:2;6215:18;;;6208:30;6274:34;6254:18;;;6247:62;-1:-1:-1;;;6325:18:18;;;6318:31;6366:19;;3597:57:6;;;;;;;;;719:10:12;-1:-1:-1;;;;;3686:21:6;;;;:62;;-1:-1:-1;3711:37:6;3728:5;719:10:12;4388:162:6;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:6;;6598:2:18;3665:170:6;;;6580:21:18;6637:2;6617:18;;;6610:30;6676:34;6656:18;;;6649:62;6747:31;6727:18;;;6720:59;6796:19;;3665:170:6;6396:425:18;3665:170:6;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:296::-;4771:41;719:10:12;4804:7:6;4771:18;:41::i;:::-;4763:99;;;;-1:-1:-1;;;4763:99:6;;;;;;;:::i;:::-;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;1186:337:0:-;1094:13:2;:11;:13::i;:::-;1303:18:0::1;1309:2;1313:7;1303:5;:18::i;:::-;1332:29;1345:7;1354:6;1332:12;:29::i;:::-;1372:25;1424:6;1448:20;1457:10;1448:8;:20::i;:::-;1407:62;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1372:98;;1481:34;1494:7;1503:11;1481:12;:34::i;:::-;1292:231;1186:337:::0;;;;:::o;4974:149:6:-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:6;;2324:56;;;;-1:-1:-1;;;2324:56:6;;8100:2:18;2324:56:6;;;8082:21:18;8139:2;8119:18;;;8112:30;-1:-1:-1;;;8158:18:18;;;8151:54;8222:18;;2324:56:6;7898:348:18;1929:204:6;2001:7;-1:-1:-1;;;;;2028:19:6;;2020:73;;;;-1:-1:-1;;;2020:73:6;;8453:2:18;2020:73:6;;;8435:21:18;8492:2;8472:18;;;8465:30;8531:34;8511:18;;;8504:62;-1:-1:-1;;;8582:18:18;;;8575:39;8631:19;;2020:73:6;8251:405:18;2020:73:6;-1:-1:-1;;;;;;2110:16:6;;;;;:9;:16;;;;;;;1929:204::o;1824:101:2:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2633:102:6:-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:12;4296:8:6;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;719:10:12;5352:7:6;5319:18;:41::i;:::-;5311:99;;;;-1:-1:-1;;;5311:99:6;;;;;;;:::i;:::-;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;806:608:9:-;879:13;904:23;919:7;904:14;:23::i;:::-;938;964:19;;;:10;:19;;;;;938:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;993:18;1014:10;3395:9:6;;;;;;;;;-1:-1:-1;3395:9:6;;;3319:92;1014:10:9;993:31;;1103:4;1097:18;1119:1;1097:23;1093:70;;-1:-1:-1;1143:9:9;806:608;-1:-1:-1;;806:608:9:o;1093:70::-;1265:23;;:27;1261:106;;1339:4;1345:9;1322:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1308:48;;;;806:608;;;:::o;1261:106::-;1384:23;1399:7;1384:14;:23::i;:::-;1377:30;806:608;-1:-1:-1;;;;806:608:9:o;406:28:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4388:162:6:-;-1:-1:-1;;;;;4508:25:6;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162::o;2074:198:2:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:2;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:2;;9364:2:18;2154:73:2::1;::::0;::::1;9346:21:18::0;9403:2;9383:18;;;9376:30;9442:34;9422:18;;;9415:62;-1:-1:-1;;;9493:18:18;;;9486:36;9539:19;;2154:73:2::1;9162:402:18::0;2154:73:2::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1570:300:6:-;1672:4;-1:-1:-1;;;;;;1707:40:6;;-1:-1:-1;;;1707:40:6;;:104;;-1:-1:-1;;;;;;;1763:48:6;;-1:-1:-1;;;1763:48:6;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:14;;;1827:36:6;829:155:14;13240:133:6;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:6;13313:53;;;;-1:-1:-1;;;13313:53:6;;8100:2:18;13313:53:6;;;8082:21:18;8139:2;8119:18;;;8112:30;-1:-1:-1;;;8158:18:18;;;8151:54;8222:18;;13313:53:6;7898:348:18;12572:171:6;12646:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12646:29:6;-1:-1:-1;;;;;12646:29:6;;;;;;;;:24;;12699:23;12646:24;12699:14;:23::i;:::-;-1:-1:-1;;;;;12690:46:6;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;-1:-1:-1;;;;;7570:16:6;:7;-1:-1:-1;;;;;7570:16:6;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:87;;;;7650:7;-1:-1:-1;;;;;7626:31:6;:20;7638:7;7626:11;:20::i;:::-;-1:-1:-1;;;;;7626:31:6;;7562:96;7404:261;-1:-1:-1;;;;7404:261:6:o;11257:1203::-;11381:4;-1:-1:-1;;;;;11354:31:6;:23;11369:7;11354:14;:23::i;:::-;-1:-1:-1;;;;;11354:31:6;;11346:81;;;;-1:-1:-1;;;11346:81:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;11445:16:6;;11437:65;;;;-1:-1:-1;;;11437:65:6;;10177:2:18;11437:65:6;;;10159:21:18;10216:2;10196:18;;;10189:30;10255:34;10235:18;;;10228:62;-1:-1:-1;;;10306:18:18;;;10299:34;10350:19;;11437:65:6;9975:400:18;11437:65:6;11682:4;-1:-1:-1;;;;;11655:31:6;:23;11670:7;11655:14;:23::i;:::-;-1:-1:-1;;;;;11655:31:6;;11647:81;;;;-1:-1:-1;;;11647:81:6;;;;;;;:::i;:::-;11797:24;;;;:15;:24;;;;;;;;11790:31;;-1:-1:-1;;;;;;11790:31:6;;;;;;-1:-1:-1;;;;;12265:15:6;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12265:20:6;;;12299:13;;;;;;;;;:18;;11790:31;12299:18;;;12337:16;;;:7;:16;;;;;;:21;;;;;;;;;;12374:27;;11813:7;;12374:27;;;3538:336;3468:406;;:::o;1359:130:2:-;1273:6;;-1:-1:-1;;;;;1273:6:2;719:10:12;1422:23:2;1414:68;;;;-1:-1:-1;;;1414:68:2;;10582:2:18;1414:68:2;;;10564:21:18;;;10601:18;;;10594:30;10660:34;10640:18;;;10633:62;10712:18;;1414:68:2;10380:356:18;8925:920:6;-1:-1:-1;;;;;9004:16:6;;8996:61;;;;-1:-1:-1;;;8996:61:6;;10943:2:18;8996:61:6;;;10925:21:18;;;10962:18;;;10955:30;11021:34;11001:18;;;10994:62;11073:18;;8996:61:6;10741:356:18;8996:61:6;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:6;7208:31;9067:58;;;;-1:-1:-1;;;9067:58:6;;11304:2:18;9067:58:6;;;11286:21:18;11343:2;11323:18;;;11316:30;11382;11362:18;;;11355:58;11430:18;;9067:58:6;11102:352:18;9067:58:6;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:6;7208:31;9271:58;;;;-1:-1:-1;;;9271:58:6;;11304:2:18;9271:58:6;;;11286:21:18;11343:2;11323:18;;;11316:30;11382;11362:18;;;11355:58;11430:18;;9271:58:6;11102:352:18;9271:58:6;-1:-1:-1;;;;;9671:13:6;;;;;;:9;:13;;;;;;;;:18;;9688:1;9671:18;;;9710:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9710:21:6;;;;;9747:33;9718:7;;9671:13;;9747:33;;9671:13;;9747:33;4169:153;;:::o;1599:253:9:-;7185:4:6;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:6;1690:75:9;;;;-1:-1:-1;;;1690:75:9;;11661:2:18;1690:75:9;;;11643:21:18;11700:2;11680:18;;;11673:30;11739:34;11719:18;;;11712:62;-1:-1:-1;;;11790:18:18;;;11783:44;11844:19;;1690:75:9;11459:410:18;1690:75:9;1775:19;;;;:10;:19;;;;;:31;1797:9;1775:19;:31;:::i;:::-;-1:-1:-1;1822:23:9;;2324:25:18;;;1822:23:9;;2312:2:18;2297:18;1822:23:9;;;;;;;1599:253;;:::o;635:543:0:-;691:13;721:5;730:1;721:10;717:56;;-1:-1:-1;;747:10:0;;;;;;;;;;;;-1:-1:-1;;;747:10:0;;;;;635:543::o;717:56::-;798:5;783:12;839:78;846:9;;839:78;;872:8;;;;:::i;:::-;;-1:-1:-1;895:10:0;;-1:-1:-1;903:2:0;895:10;;:::i;:::-;;;839:78;;;927:19;959:6;949:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;949:17:0;;927:39;;977:162;984:10;;977:162;;1020:10;1029:1;1020:6;:10;:::i;:::-;1011:19;-1:-1:-1;1088:10:0;1096:2;1088:5;:10;:::i;:::-;1075:24;;:2;:24;:::i;:::-;1062:39;;1045:6;1052;1045:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;1045:56:0;;;;;;;;-1:-1:-1;1116:11:0;1125:2;1116:11;;:::i;:::-;;;977:162;;2426:187:2;2518:6;;;-1:-1:-1;;;;;2534:17:2;;;-1:-1:-1;;;;;;2534:17:2;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;12879:277:6:-;12999:8;-1:-1:-1;;;;;12990:17:6;:5;-1:-1:-1;;;;;12990:17:6;;12982:55;;;;-1:-1:-1;;;12982:55:6;;15321:2:18;12982:55:6;;;15303:21:18;15360:2;15340:18;;;15333:30;15399:27;15379:18;;;15372:55;15444:18;;12982:55:6;15119:349:18;12982:55:6;-1:-1:-1;;;;;13047:25:6;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13047:46:6;;;;;;;;;;13108:41;;540::18;;;13108::6;;513:18:18;13108:41:6;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;-1:-1:-1;;;6476:110:6;;;;;;;:::i;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:6;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:6:o;13925:831::-;14074:4;-1:-1:-1;;;;;14094:13:6;;1702:19:11;:23;14090:660:6;;14129:71;;-1:-1:-1;;;14129:71:6;;-1:-1:-1;;;;;14129:36:6;;;;;:71;;719:10:12;;14180:4:6;;14186:7;;14195:4;;14129:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14129:71:6;;;;;;;;-1:-1:-1;;14129:71:6;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14367:6;:13;14384:1;14367:18;14363:321;;14409:60;;-1:-1:-1;;;14409:60:6;;;;;;;:::i;14363:321::-;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;-1:-1:-1;;;;;;14250:51:6;-1:-1:-1;;;14250:51:6;;-1:-1:-1;14243:58:6;;14090:660;-1:-1:-1;14735:4:6;13925:831;;;;;;:::o;447:696:13:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:13;-1:-1:-1;604:41:13;-1:-1:-1;765:28:13;;;781:2;765:28;820:280;-1:-1:-1;;851:5:13;-1:-1:-1;;;985:2:13;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:13;820:280;1064:21;-1:-1:-1;1120:6:13;447:696;-1:-1:-1;;;447:696:13:o;10139:916:16:-;10192:7;;-1:-1:-1;;;10267:17:16;;10263:103;;-1:-1:-1;;;10304:17:16;;;-1:-1:-1;10349:2:16;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:16;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:16;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:16;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:16;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:16;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:16:o;14:131:18:-;-1:-1:-1;;;;;;88:32:18;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:18;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:18;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:18:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:18;;1348:180;-1:-1:-1;1348:180:18:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:18;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:18:o;2360:328::-;2437:6;2445;2453;2506:2;2494:9;2485:7;2481:23;2477:32;2474:52;;;2522:1;2519;2512:12;2474:52;2545:29;2564:9;2545:29;:::i;:::-;2535:39;;2593:38;2627:2;2616:9;2612:18;2593:38;:::i;:::-;2583:48;;2678:2;2667:9;2663:18;2650:32;2640:42;;2360:328;;;;;:::o;2693:127::-;2754:10;2749:3;2745:20;2742:1;2735:31;2785:4;2782:1;2775:15;2809:4;2806:1;2799:15;2825:632;2890:5;2920:18;2961:2;2953:6;2950:14;2947:40;;;2967:18;;:::i;:::-;3042:2;3036:9;3010:2;3096:15;;-1:-1:-1;;3092:24:18;;;3118:2;3088:33;3084:42;3072:55;;;3142:18;;;3162:22;;;3139:46;3136:72;;;3188:18;;:::i;:::-;3228:10;3224:2;3217:22;3257:6;3248:15;;3287:6;3279;3272:22;3327:3;3318:6;3313:3;3309:16;3306:25;3303:45;;;3344:1;3341;3334:12;3303:45;3394:6;3389:3;3382:4;3374:6;3370:17;3357:44;3449:1;3442:4;3433:6;3425;3421:19;3417:30;3410:41;;;;2825:632;;;;;:::o;3462:662::-;3558:6;3566;3574;3582;3635:3;3623:9;3614:7;3610:23;3606:33;3603:53;;;3652:1;3649;3642:12;3603:53;3675:29;3694:9;3675:29;:::i;:::-;3665:39;;3751:2;3740:9;3736:18;3723:32;3713:42;;3802:2;3791:9;3787:18;3774:32;3764:42;;3857:2;3846:9;3842:18;3829:32;3884:18;3876:6;3873:30;3870:50;;;3916:1;3913;3906:12;3870:50;3939:22;;3992:4;3984:13;;3980:27;-1:-1:-1;3970:55:18;;4021:1;4018;4011:12;3970:55;4044:74;4110:7;4105:2;4092:16;4087:2;4083;4079:11;4044:74;:::i;:::-;4034:84;;;3462:662;;;;;;;:::o;4129:186::-;4188:6;4241:2;4229:9;4220:7;4216:23;4212:32;4209:52;;;4257:1;4254;4247:12;4209:52;4280:29;4299:9;4280:29;:::i;4320:347::-;4385:6;4393;4446:2;4434:9;4425:7;4421:23;4417:32;4414:52;;;4462:1;4459;4452:12;4414:52;4485:29;4504:9;4485:29;:::i;:::-;4475:39;;4564:2;4553:9;4549:18;4536:32;4611:5;4604:13;4597:21;4590:5;4587:32;4577:60;;4633:1;4630;4623:12;4577:60;4656:5;4646:15;;;4320:347;;;;;:::o;4672:667::-;4767:6;4775;4783;4791;4844:3;4832:9;4823:7;4819:23;4815:33;4812:53;;;4861:1;4858;4851:12;4812:53;4884:29;4903:9;4884:29;:::i;:::-;4874:39;;4932:38;4966:2;4955:9;4951:18;4932:38;:::i;:::-;4922:48;;5017:2;5006:9;5002:18;4989:32;4979:42;;5072:2;5061:9;5057:18;5044:32;5099:18;5091:6;5088:30;5085:50;;;5131:1;5128;5121:12;5344:260;5412:6;5420;5473:2;5461:9;5452:7;5448:23;5444:32;5441:52;;;5489:1;5486;5479:12;5441:52;5512:29;5531:9;5512:29;:::i;:::-;5502:39;;5560:38;5594:2;5583:9;5579:18;5560:38;:::i;:::-;5550:48;;5344:260;;;;;:::o;5609:380::-;5688:1;5684:12;;;;5731;;;5752:61;;5806:4;5798:6;5794:17;5784:27;;5752:61;5859:2;5851:6;5848:14;5828:18;5825:38;5822:161;;5905:10;5900:3;5896:20;5893:1;5886:31;5940:4;5937:1;5930:15;5968:4;5965:1;5958:15;5822:161;;5609:380;;;:::o;6826:409::-;7028:2;7010:21;;;7067:2;7047:18;;;7040:30;7106:34;7101:2;7086:18;;7079:62;-1:-1:-1;;;7172:2:18;7157:18;;7150:43;7225:3;7210:19;;6826:409::o;7240:653::-;7520:3;7558:6;7552:13;7574:66;7633:6;7628:3;7621:4;7613:6;7609:17;7574:66;:::i;:::-;-1:-1:-1;;;7662:16:18;;;7687:29;;;7741:13;;7763:79;7741:13;7828:2;7817:14;;7810:4;7798:17;;7763:79;:::i;:::-;7862:20;7884:2;7858:29;;7240:653;-1:-1:-1;;;;7240:653:18:o;8661:496::-;8840:3;8878:6;8872:13;8894:66;8953:6;8948:3;8941:4;8933:6;8929:17;8894:66;:::i;:::-;9023:13;;8982:16;;;;9045:70;9023:13;8982:16;9092:4;9080:17;;9045:70;:::i;:::-;9131:20;;8661:496;-1:-1:-1;;;;8661:496:18:o;9569:401::-;9771:2;9753:21;;;9810:2;9790:18;;;9783:30;9849:34;9844:2;9829:18;;9822:62;-1:-1:-1;;;9915:2:18;9900:18;;9893:35;9960:3;9945:19;;9569:401::o;12000:545::-;12102:2;12097:3;12094:11;12091:448;;;12138:1;12163:5;12159:2;12152:17;12208:4;12204:2;12194:19;12278:2;12266:10;12262:19;12259:1;12255:27;12249:4;12245:38;12314:4;12302:10;12299:20;12296:47;;;-1:-1:-1;12337:4:18;12296:47;12392:2;12387:3;12383:12;12380:1;12376:20;12370:4;12366:31;12356:41;;12447:82;12465:2;12458:5;12455:13;12447:82;;;12510:17;;;12491:1;12480:13;12447:82;;;12451:3;;;12000:545;;;:::o;12721:1352::-;12847:3;12841:10;12874:18;12866:6;12863:30;12860:56;;;12896:18;;:::i;:::-;12925:97;13015:6;12975:38;13007:4;13001:11;12975:38;:::i;:::-;12969:4;12925:97;:::i;:::-;13077:4;;13141:2;13130:14;;13158:1;13153:663;;;;13860:1;13877:6;13874:89;;;-1:-1:-1;13929:19:18;;;13923:26;13874:89;-1:-1:-1;;12678:1:18;12674:11;;;12670:24;12666:29;12656:40;12702:1;12698:11;;;12653:57;13976:81;;13123:944;;13153:663;11947:1;11940:14;;;11984:4;11971:18;;-1:-1:-1;;13189:20:18;;;13307:236;13321:7;13318:1;13315:14;13307:236;;;13410:19;;;13404:26;13389:42;;13502:27;;;;13470:1;13458:14;;;;13337:19;;13307:236;;;13311:3;13571:6;13562:7;13559:19;13556:201;;;13632:19;;;13626:26;-1:-1:-1;;13715:1:18;13711:14;;;13727:3;13707:24;13703:37;13699:42;13684:58;13669:74;;13556:201;-1:-1:-1;;;;;13803:1:18;13787:14;;;13783:22;13770:36;;-1:-1:-1;12721:1352:18:o;14078:127::-;14139:10;14134:3;14130:20;14127:1;14120:31;14170:4;14167:1;14160:15;14194:4;14191:1;14184:15;14210:135;14249:3;14270:17;;;14267:43;;14290:18;;:::i;:::-;-1:-1:-1;14337:1:18;14326:13;;14210:135::o;14350:127::-;14411:10;14406:3;14402:20;14399:1;14392:31;14442:4;14439:1;14432:15;14466:4;14463:1;14456:15;14482:120;14522:1;14548;14538:35;;14553:18;;:::i;:::-;-1:-1:-1;14587:9:18;;14482:120::o;14607:128::-;14674:9;;;14695:11;;;14692:37;;;14709:18;;:::i;14740:112::-;14772:1;14798;14788:35;;14803:18;;:::i;:::-;-1:-1:-1;14837:9:18;;14740:112::o;14857:125::-;14922:9;;;14943:10;;;14940:36;;;14956:18;;:::i;14987:127::-;15048:10;15043:3;15039:20;15036:1;15029:31;15079:4;15076:1;15069:15;15103:4;15100:1;15093:15;15473:414;15675:2;15657:21;;;15714:2;15694:18;;;15687:30;15753:34;15748:2;15733:18;;15726:62;-1:-1:-1;;;15819:2:18;15804:18;;15797:48;15877:3;15862:19;;15473:414::o;15892:489::-;-1:-1:-1;;;;;16161:15:18;;;16143:34;;16213:15;;16208:2;16193:18;;16186:43;16260:2;16245:18;;16238:34;;;16308:3;16303:2;16288:18;;16281:31;;;16086:4;;16329:46;;16355:19;;16347:6;16329:46;:::i;:::-;16321:54;15892:489;-1:-1:-1;;;;;;15892:489:18:o;16386:249::-;16455:6;16508:2;16496:9;16487:7;16483:23;16479:32;16476:52;;;16524:1;16521;16514:12;16476:52;16556:9;16550:16;16575:30;16599:5;16575:30;:::i",
    "sourcePath": "c:/Users/nesri/Videos/collectible-card-game-daar/contracts/src/Collection.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.19+commit.7dd6d404"
    },
    "ast": {
        "absolutePath": "c:/Users/nesri/Videos/collectible-card-game-daar/contracts/src/Collection.sol",
        "exportedSymbols": {
            "Address": [
                1985
            ],
            "Collection": [
                155
            ],
            "Context": [
                2007
            ],
            "ERC165": [
                2260
            ],
            "ERC721": [
                1338
            ],
            "ERC721URIStorage": [
                1628
            ],
            "IERC165": [
                2272
            ],
            "IERC4906": [
                408
            ],
            "IERC721": [
                1454
            ],
            "IERC721Metadata": [
                1655
            ],
            "IERC721Receiver": [
                1472
            ],
            "Math": [
                3138
            ],
            "Ownable": [
                383
            ],
            "SignedMath": [
                3243
            ],
            "Strings": [
                2236
            ]
        },
        "id": 156,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".1"
                ],
                "nodeType": "PragmaDirective",
                "src": "63:23:0"
            },
            {
                "absolutePath": "c:/Users/nesri/Videos/collectible-card-game-daar/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
                "file": "c:/Users/nesri/Videos/collectible-card-game-daar/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 156,
                "sourceUnit": 1629,
                "src": "90:140:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/nesri/Videos/collectible-card-game-daar/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "file": "c:/Users/nesri/Videos/collectible-card-game-daar/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 156,
                "sourceUnit": 384,
                "src": "232:114:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 4,
                            "name": "ERC721URIStorage",
                            "nameLocations": [
                                "373:16:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1628,
                            "src": "373:16:0"
                        },
                        "id": 5,
                        "nodeType": "InheritanceSpecifier",
                        "src": "373:16:0"
                    },
                    {
                        "baseName": {
                            "id": 6,
                            "name": "Ownable",
                            "nameLocations": [
                                "391:7:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 383,
                            "src": "391:7:0"
                        },
                        "id": 7,
                        "nodeType": "InheritanceSpecifier",
                        "src": "391:7:0"
                    }
                ],
                "canonicalName": "Collection",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 155,
                "linearizedBaseContracts": [
                    155,
                    383,
                    1628,
                    1338,
                    1655,
                    408,
                    1454,
                    2260,
                    2272,
                    2007
                ],
                "name": "Collection",
                "nameLocation": "359:10:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "e5326ab1",
                        "id": 9,
                        "mutability": "mutable",
                        "name": "collectionName",
                        "nameLocation": "420:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 155,
                        "src": "406:28:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 8,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "406:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "1b6cde10",
                        "id": 11,
                        "mutability": "mutable",
                        "name": "cardCount",
                        "nameLocation": "456:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 155,
                        "src": "441:24:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 10,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "441:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 30,
                            "nodeType": "Block",
                            "src": "549:74:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 24,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 22,
                                            "name": "collectionName",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9,
                                            "src": "560:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 23,
                                            "name": "_name",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 13,
                                            "src": "577:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                            }
                                        },
                                        "src": "560:22:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 25,
                                    "nodeType": "ExpressionStatement",
                                    "src": "560:22:0"
                                },
                                {
                                    "expression": {
                                        "id": 28,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 26,
                                            "name": "cardCount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 11,
                                            "src": "593:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 27,
                                            "name": "_cardCount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 15,
                                            "src": "605:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "593:22:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 29,
                                    "nodeType": "ExpressionStatement",
                                    "src": "593:22:0"
                                }
                            ]
                        },
                        "id": 31,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 18,
                                        "name": "_name",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 13,
                                        "src": "534:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    {
                                        "hexValue": "434f4c4c",
                                        "id": 19,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "541:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_9f30553f86b5e70a5562a86fb43623825f43d8ca612afeddf2285181e057bc72",
                                            "typeString": "literal_string \"COLL\""
                                        },
                                        "value": "COLL"
                                    }
                                ],
                                "id": 20,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 17,
                                    "name": "ERC721",
                                    "nameLocations": [
                                        "527:6:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1338,
                                    "src": "527:6:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "527:21:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 16,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 13,
                                    "mutability": "mutable",
                                    "name": "_name",
                                    "nameLocation": "500:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 31,
                                    "src": "486:19:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 12,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "486:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 15,
                                    "mutability": "mutable",
                                    "name": "_cardCount",
                                    "nameLocation": "515:10:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 31,
                                    "src": "507:18:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 14,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "507:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "485:41:0"
                        },
                        "returnParameters": {
                            "id": 21,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "549:0:0"
                        },
                        "scope": 155,
                        "src": "474:149:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 110,
                            "nodeType": "Block",
                            "src": "706:472:0",
                            "statements": [
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 40,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 38,
                                            "name": "value",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 33,
                                            "src": "721:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                            "hexValue": "30",
                                            "id": 39,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "730:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "721:10:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 44,
                                    "nodeType": "IfStatement",
                                    "src": "717:56:0",
                                    "trueBody": {
                                        "id": 43,
                                        "nodeType": "Block",
                                        "src": "733:40:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "hexValue": "30",
                                                    "id": 41,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "string",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "754:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                                        "typeString": "literal_string \"0\""
                                                    },
                                                    "value": "0"
                                                },
                                                "functionReturnParameters": 37,
                                                "id": 42,
                                                "nodeType": "Return",
                                                "src": "747:10:0"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "assignments": [
                                        46
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 46,
                                            "mutability": "mutable",
                                            "name": "temp",
                                            "nameLocation": "791:4:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 110,
                                            "src": "783:12:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 45,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "783:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 48,
                                    "initialValue": {
                                        "id": 47,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 33,
                                        "src": "798:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "783:20:0"
                                },
                                {
                                    "assignments": [
                                        50
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 50,
                                            "mutability": "mutable",
                                            "name": "digits",
                                            "nameLocation": "822:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 110,
                                            "src": "814:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 49,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "814:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 51,
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "814:14:0"
                                },
                                {
                                    "body": {
                                        "id": 62,
                                        "nodeType": "Block",
                                        "src": "857:60:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 56,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "UnaryOperation",
                                                    "operator": "++",
                                                    "prefix": false,
                                                    "src": "872:8:0",
                                                    "subExpression": {
                                                        "id": 55,
                                                        "name": "digits",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 50,
                                                        "src": "872:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 57,
                                                "nodeType": "ExpressionStatement",
                                                "src": "872:8:0"
                                            },
                                            {
                                                "expression": {
                                                    "id": 60,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 58,
                                                        "name": "temp",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 46,
                                                        "src": "895:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "/=",
                                                    "rightHandSide": {
                                                        "hexValue": "3130",
                                                        "id": 59,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "903:2:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_10_by_1",
                                                            "typeString": "int_const 10"
                                                        },
                                                        "value": "10"
                                                    },
                                                    "src": "895:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 61,
                                                "nodeType": "ExpressionStatement",
                                                "src": "895:10:0"
                                            }
                                        ]
                                    },
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 54,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 52,
                                            "name": "temp",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 46,
                                            "src": "846:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                            "hexValue": "30",
                                            "id": 53,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "854:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "846:9:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 63,
                                    "nodeType": "WhileStatement",
                                    "src": "839:78:0"
                                },
                                {
                                    "assignments": [
                                        65
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 65,
                                            "mutability": "mutable",
                                            "name": "buffer",
                                            "nameLocation": "940:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 110,
                                            "src": "927:19:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes"
                                            },
                                            "typeName": {
                                                "id": 64,
                                                "name": "bytes",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "927:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_storage_ptr",
                                                    "typeString": "bytes"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 70,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 68,
                                                "name": "digits",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 50,
                                                "src": "959:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 67,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "NewExpression",
                                            "src": "949:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function (uint256) pure returns (bytes memory)"
                                            },
                                            "typeName": {
                                                "id": 66,
                                                "name": "bytes",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "953:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_storage_ptr",
                                                    "typeString": "bytes"
                                                }
                                            }
                                        },
                                        "id": 69,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "949:17:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "927:39:0"
                                },
                                {
                                    "body": {
                                        "id": 103,
                                        "nodeType": "Block",
                                        "src": "996:143:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 78,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 74,
                                                        "name": "digits",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 50,
                                                        "src": "1011:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 77,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 75,
                                                            "name": "digits",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 50,
                                                            "src": "1020:6:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "-",
                                                        "rightExpression": {
                                                            "hexValue": "31",
                                                            "id": 76,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1029:1:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_1_by_1",
                                                                "typeString": "int_const 1"
                                                            },
                                                            "value": "1"
                                                        },
                                                        "src": "1020:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "1011:19:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 79,
                                                "nodeType": "ExpressionStatement",
                                                "src": "1011:19:0"
                                            },
                                            {
                                                "expression": {
                                                    "id": 97,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "baseExpression": {
                                                            "id": 80,
                                                            "name": "buffer",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 65,
                                                            "src": "1045:6:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        },
                                                        "id": 82,
                                                        "indexExpression": {
                                                            "id": 81,
                                                            "name": "digits",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 50,
                                                            "src": "1052:6:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": true,
                                                        "nodeType": "IndexAccess",
                                                        "src": "1045:14:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes1",
                                                            "typeString": "bytes1"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "arguments": [
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "commonType": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        },
                                                                        "id": 94,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                            "hexValue": "3438",
                                                                            "id": 87,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "kind": "number",
                                                                            "lValueRequested": false,
                                                                            "nodeType": "Literal",
                                                                            "src": "1075:2:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_rational_48_by_1",
                                                                                "typeString": "int_const 48"
                                                                            },
                                                                            "value": "48"
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "+",
                                                                        "rightExpression": {
                                                                            "arguments": [
                                                                                {
                                                                                    "commonType": {
                                                                                        "typeIdentifier": "t_uint256",
                                                                                        "typeString": "uint256"
                                                                                    },
                                                                                    "id": 92,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": false,
                                                                                    "lValueRequested": false,
                                                                                    "leftExpression": {
                                                                                        "id": 90,
                                                                                        "name": "value",
                                                                                        "nodeType": "Identifier",
                                                                                        "overloadedDeclarations": [],
                                                                                        "referencedDeclaration": 33,
                                                                                        "src": "1088:5:0",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_uint256",
                                                                                            "typeString": "uint256"
                                                                                        }
                                                                                    },
                                                                                    "nodeType": "BinaryOperation",
                                                                                    "operator": "%",
                                                                                    "rightExpression": {
                                                                                        "hexValue": "3130",
                                                                                        "id": 91,
                                                                                        "isConstant": false,
                                                                                        "isLValue": false,
                                                                                        "isPure": true,
                                                                                        "kind": "number",
                                                                                        "lValueRequested": false,
                                                                                        "nodeType": "Literal",
                                                                                        "src": "1096:2:0",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_rational_10_by_1",
                                                                                            "typeString": "int_const 10"
                                                                                        },
                                                                                        "value": "10"
                                                                                    },
                                                                                    "src": "1088:10:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_uint256",
                                                                                        "typeString": "uint256"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "argumentTypes": [
                                                                                    {
                                                                                        "typeIdentifier": "t_uint256",
                                                                                        "typeString": "uint256"
                                                                                    }
                                                                                ],
                                                                                "id": 89,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "lValueRequested": false,
                                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                                "src": "1080:7:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_type$_t_uint256_$",
                                                                                    "typeString": "type(uint256)"
                                                                                },
                                                                                "typeName": {
                                                                                    "id": 88,
                                                                                    "name": "uint256",
                                                                                    "nodeType": "ElementaryTypeName",
                                                                                    "src": "1080:7:0",
                                                                                    "typeDescriptions": {}
                                                                                }
                                                                            },
                                                                            "id": 93,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "kind": "typeConversion",
                                                                            "lValueRequested": false,
                                                                            "nameLocations": [],
                                                                            "names": [],
                                                                            "nodeType": "FunctionCall",
                                                                            "src": "1080:19:0",
                                                                            "tryCall": false,
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "src": "1075:24:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    ],
                                                                    "id": 86,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "ElementaryTypeNameExpression",
                                                                    "src": "1069:5:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_uint8_$",
                                                                        "typeString": "type(uint8)"
                                                                    },
                                                                    "typeName": {
                                                                        "id": 85,
                                                                        "name": "uint8",
                                                                        "nodeType": "ElementaryTypeName",
                                                                        "src": "1069:5:0",
                                                                        "typeDescriptions": {}
                                                                    }
                                                                },
                                                                "id": 95,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "typeConversion",
                                                                "lValueRequested": false,
                                                                "nameLocations": [],
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "1069:31:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint8",
                                                                    "typeString": "uint8"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint8",
                                                                    "typeString": "uint8"
                                                                }
                                                            ],
                                                            "id": 84,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "1062:6:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_bytes1_$",
                                                                "typeString": "type(bytes1)"
                                                            },
                                                            "typeName": {
                                                                "id": 83,
                                                                "name": "bytes1",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "1062:6:0",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 96,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1062:39:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes1",
                                                            "typeString": "bytes1"
                                                        }
                                                    },
                                                    "src": "1045:56:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes1",
                                                        "typeString": "bytes1"
                                                    }
                                                },
                                                "id": 98,
                                                "nodeType": "ExpressionStatement",
                                                "src": "1045:56:0"
                                            },
                                            {
                                                "expression": {
                                                    "id": 101,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 99,
                                                        "name": "value",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 33,
                                                        "src": "1116:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "/=",
                                                    "rightHandSide": {
                                                        "hexValue": "3130",
                                                        "id": 100,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1125:2:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_10_by_1",
                                                            "typeString": "int_const 10"
                                                        },
                                                        "value": "10"
                                                    },
                                                    "src": "1116:11:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 102,
                                                "nodeType": "ExpressionStatement",
                                                "src": "1116:11:0"
                                            }
                                        ]
                                    },
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 73,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 71,
                                            "name": "value",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 33,
                                            "src": "984:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                            "hexValue": "30",
                                            "id": 72,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "993:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "984:10:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 104,
                                    "nodeType": "WhileStatement",
                                    "src": "977:162:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 107,
                                                "name": "buffer",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 65,
                                                "src": "1163:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "id": 106,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "1156:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                "typeString": "type(string storage pointer)"
                                            },
                                            "typeName": {
                                                "id": 105,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1156:6:0",
                                                "typeDescriptions": {}
                                            }
                                        },
                                        "id": 108,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1156:14:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    "functionReturnParameters": 37,
                                    "id": 109,
                                    "nodeType": "Return",
                                    "src": "1149:21:0"
                                }
                            ]
                        },
                        "id": 111,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "toString",
                        "nameLocation": "644:8:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 34,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 33,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "661:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 111,
                                    "src": "653:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 32,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "653:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "652:15:0"
                        },
                        "returnParameters": {
                            "id": 37,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 36,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 111,
                                    "src": "691:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 35,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "691:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "690:15:0"
                        },
                        "scope": 155,
                        "src": "635:543:0",
                        "stateMutability": "pure",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 153,
                            "nodeType": "Block",
                            "src": "1292:231:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 125,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 113,
                                                "src": "1309:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 126,
                                                "name": "tokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 115,
                                                "src": "1313:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 124,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1012,
                                            "src": "1303:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 127,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1303:18:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 128,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1303:18:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 130,
                                                "name": "tokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 115,
                                                "src": "1345:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "id": 131,
                                                "name": "imgUri",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 119,
                                                "src": "1354:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            ],
                                            "id": 129,
                                            "name": "_setTokenURI",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1597,
                                            "src": "1332:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (uint256,string memory)"
                                            }
                                        },
                                        "id": 132,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1332:29:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 133,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1332:29:0"
                                },
                                {
                                    "assignments": [
                                        135
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 135,
                                            "mutability": "mutable",
                                            "name": "metadataUri",
                                            "nameLocation": "1386:11:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 153,
                                            "src": "1372:25:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 134,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1372:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 147,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 140,
                                                        "name": "imgUri",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 119,
                                                        "src": "1424:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "3f636172644e756d6265723d",
                                                        "id": 141,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1432:14:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_491ed669d4cfac7774e15550500c43d4eaa03302421ea08ad79b110a82414fef",
                                                            "typeString": "literal_string \"?cardNumber=\""
                                                        },
                                                        "value": "?cardNumber="
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 143,
                                                                "name": "cardNumber",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 117,
                                                                "src": "1457:10:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "id": 142,
                                                            "name": "toString",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 111,
                                                            "src": "1448:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                                                "typeString": "function (uint256) pure returns (string memory)"
                                                            }
                                                        },
                                                        "id": 144,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1448:20:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_491ed669d4cfac7774e15550500c43d4eaa03302421ea08ad79b110a82414fef",
                                                            "typeString": "literal_string \"?cardNumber=\""
                                                        },
                                                        {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 138,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967295,
                                                        "src": "1407:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                        }
                                                    },
                                                    "id": 139,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberLocation": "1411:12:0",
                                                    "memberName": "encodePacked",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1407:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function () pure returns (bytes memory)"
                                                    }
                                                },
                                                "id": 145,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1407:62:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "id": 137,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "1400:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                "typeString": "type(string storage pointer)"
                                            },
                                            "typeName": {
                                                "id": 136,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1400:6:0",
                                                "typeDescriptions": {}
                                            }
                                        },
                                        "id": 146,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1400:70:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1372:98:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 149,
                                                "name": "tokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 115,
                                                "src": "1494:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "id": 150,
                                                "name": "metadataUri",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 135,
                                                "src": "1503:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            ],
                                            "id": 148,
                                            "name": "_setTokenURI",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1597,
                                            "src": "1481:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (uint256,string memory)"
                                            }
                                        },
                                        "id": 151,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1481:34:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 152,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1481:34:0"
                                }
                            ]
                        },
                        "functionSelector": "330fe3df",
                        "id": 154,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 122,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 121,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "1282:9:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 302,
                                    "src": "1282:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1282:9:0"
                            }
                        ],
                        "name": "mintCard",
                        "nameLocation": "1195:8:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 120,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 113,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "1212:2:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 154,
                                    "src": "1204:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 112,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1204:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 115,
                                    "mutability": "mutable",
                                    "name": "tokenId",
                                    "nameLocation": "1224:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 154,
                                    "src": "1216:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 114,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1216:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 117,
                                    "mutability": "mutable",
                                    "name": "cardNumber",
                                    "nameLocation": "1241:10:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 154,
                                    "src": "1233:18:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 116,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1233:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 119,
                                    "mutability": "mutable",
                                    "name": "imgUri",
                                    "nameLocation": "1267:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 154,
                                    "src": "1253:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 118,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1253:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1203:71:0"
                        },
                        "returnParameters": {
                            "id": 123,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1292:0:0"
                        },
                        "scope": 155,
                        "src": "1186:337:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 156,
                "src": "350:1176:0",
                "usedErrors": []
            }
        ],
        "src": "63:1463:0"
    },
    "functionHashes": {
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "cardCount()": "1b6cde10",
        "collectionName()": "e5326ab1",
        "getApproved(uint256)": "081812fc",
        "isApprovedForAll(address,address)": "e985e9c5",
        "mintCard(address,uint256,uint256,string)": "330fe3df",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "ownerOf(uint256)": "6352211e",
        "renounceOwnership()": "715018a6",
        "safeTransferFrom(address,address,uint256)": "42842e0e",
        "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
        "setApprovalForAll(address,bool)": "a22cb465",
        "supportsInterface(bytes4)": "01ffc9a7",
        "symbol()": "95d89b41",
        "tokenURI(uint256)": "c87b56dd",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1357800",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "approve(address,uint256)": "infinite",
            "balanceOf(address)": "2612",
            "cardCount()": "2318",
            "collectionName()": "infinite",
            "getApproved(uint256)": "4792",
            "isApprovedForAll(address,address)": "infinite",
            "mintCard(address,uint256,uint256,string)": "infinite",
            "name()": "infinite",
            "owner()": "2398",
            "ownerOf(uint256)": "2649",
            "renounceOwnership()": "infinite",
            "safeTransferFrom(address,address,uint256)": "infinite",
            "safeTransferFrom(address,address,uint256,bytes)": "infinite",
            "setApprovalForAll(address,bool)": "26794",
            "supportsInterface(bytes4)": "infinite",
            "symbol()": "infinite",
            "tokenURI(uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "transferOwnership(address)": "28446"
        },
        "internal": {
            "toString(uint256)": "infinite"
        }
    }
}